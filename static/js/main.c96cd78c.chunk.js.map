{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","style","border","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"8MAGMA,EAAe,CACjBC,OAAS,CACLC,KAAM,sBACNC,SAAU,OAEdC,OAAS,CACLF,KAAM,qBACNC,SAAU,cAwBHE,EAbO,SAAAC,GAClB,IAReC,EAAKC,EAQdC,GARSF,EAQUD,EAAMC,KARXC,GAQgB,IAAIE,MAAOC,YAPpC,GAAKH,EAAQ,EACbD,EAAM,EAAI,SAAW,SAEzBA,EAAM,EAAI,SAAW,UAK5B,EAA2BP,EAAaS,GAAhCP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAEd,OACI,sBAAKS,UAAS,yBAAoBH,GAAlC,UACI,mBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,6BAAKD,IACL,mBAAGU,UAAS,6BAAwBT,EAAxB,eC3BlBU,EAAU,SAAAP,GACZ,OACI,qBAAKM,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,SACKN,EAAMQ,aAMvBD,EAAQE,aAAe,CACnBD,QAAS,cAGED,QCXTG,E,4MAEJC,MAAQ,CAAEV,IAAK,KAAMW,WAAY,I,uDAEjC,WAAqB,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GACE,EAAKC,SAAS,CAAEjB,IAAKgB,EAASE,OAAOC,cAEvC,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEN,WAAYS,EAAIb,e,2BAI3C,WACE,OAAIc,KAAKX,MAAMV,IACN,cAAC,EAAD,CAAeA,IAAKqB,KAAKX,MAAMV,MAGlCqB,KAAKX,MAAMC,WACN,8BAAMU,KAAKX,MAAMC,aAEnB,cAAC,EAAD,CAASJ,QAAQ,qC,oBAI5B,WACE,OAAO,qBAAKe,MAAO,CAAEC,OAAQ,iBAAtB,SACJF,KAAKG,sB,GA3BMC,IAAMC,WAgCxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.c96cd78c.chunk.js","sourcesContent":["import './css/SeasonDisplay.css'\nimport React from 'react';\n\nconst seasonConfig = {\n    summer : {\n        text: 'Let\\'s hit the beach',\n        iconName: 'sun'\n    },\n    winter : {\n        text: 'Burr, it is chilly',\n        iconName: 'snowflake'\n    }\n}\n\nconst getSeason = (lat, month) => {\n    if (month >2 && month < 9){\n        return lat > 0 ? 'summer' : 'winter'\n    }\n    return lat > 0 ? 'winter' : 'summer'\n}\n\nconst SeasonDisplay = props => {\n    const season = getSeason(props.lat, new Date().getMonth());\n    const { text, iconName } = seasonConfig[season];\n\n    return (\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive ${iconName} icon`} />\n            <h1>{text}</h1>\n            <i className={`icon-right massive ${iconName} icon`} />\n        </div>\n    );\n};\n\nexport default SeasonDisplay\n","import React from 'react';\n\nconst Spinner = props => {\n    return (\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\">\n                {props.message}\n            </div>\n        </div>\n    );\n}\n\nSpinner.defaultProps = {\n    message: 'Loading...'\n};\n\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n\n  state = { lat: null, errMessage: '' }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        this.setState({ lat: position.coords.latitude })\n      },\n      err => this.setState({ errMessage: err.message })\n    );\n  }\n\n  renderContent() {\n    if (this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n    else {\n      if (this.state.errMessage) {\n        return <div>{this.state.errMessage}</div>;\n      }\n      return <Spinner message=\"Please accept location request\" />;\n    }\n  }\n\n  render() {\n    return <div style={{ border: '2px solid red' }}>\n      {this.renderContent()}\n    </div>;\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n)"],"sourceRoot":""}